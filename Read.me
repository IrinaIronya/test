Задание №1. int i = 2147483647; i++; Что будет и почему?!
   При инкременте числа 2147483647 получаем отрицательное число -2147483648. Это происходит, потому что число 2147483647
является максимальным положительным числом типа данных int и  переходит в минимальное отрицательное число -2147483648.
________________________________________________________________________________________________________________________
Задание №2. Упростить конструкцию: if(i < 10 && i >= 60 || i == 9).....
   Условием оператора ветвления if является составное логическое выражение. Левая и правая часть выражения
i < 10 && i >= 60 являются взаимоисключающими, т.к. не такого числа, которое одновременно может быть <10 и >=60, поэтому
выражение i < 10 && i >= 60 всегда будет false.
   Выражение (i < 10 && i >= 60) || i == 9 будет равно true, когда хотя бы
одно из частей этого выражения будет true. Т.к. левая часть этого выражения всегда false, оно не имеет значения;
значение имеет только права часть. Поэтому конструкцию if(i < 10 && i >= 60 || i == 9) можно сократить до if(i == 9).
________________________________________________________________________________________________________________________
Задание №3. Объяснить почему нельзя сравнивать float и double через ==.
   Точность числа с плавающей точкой - это количество цифр, которое оно может представлять, не теряя при этом никакой
 информации.
   Десятичные значения могут быть даны с большим количеством цифр после запятой, иногда даже уходить в бесконечность
(н-р: дробь 1/3 = 0.333333333333...., т.е. 3 в приоде).
   Типы данных float или double занимают ограниченное количество памяти(4 или 8 байт). Поэтому плавающие точки и двойные
 числа могут хранить только определенное количество цифр, а остальные будут потеряны. Из-за этого при сравнении двух
 значений с плавающей точкой могут возникать ошибки округления, теряется точность значений, сравнение дает неверные
 результаты.
________________________________________________________________________________________________________________________
Задание №4. Переместить i, либо убрать, чтобы i объявлялась после if блока или не была доступна после if блока (в этом
случае вывод в консоль уберите), либо код работал без переноса i до блока if. При этом нельзя менять название
переменной.
            boolean isTrue = true;

            int i = 0;
            if (isTrue) {
               i += 10;
               System.out.println(i);
            } else {
               i -= 10;
               System.out.println(i);
            }
            System.out.println(i);

    Переменную можно объявить после условия, т.е. if(i<10){ i+=3;
                                                   System.out.println(i);}
________________________________________________________________________________________________________________________
1. Реализовать сортировку массива int алгоритмом bubble sort.

import java.util.Arrays;

public class Main {

    public static void main(String[] args) {

        int [] array = {54, 13, 7, 1, 10, 25, 3, 8, 17, 5};

        boolean isSorted = false;
        int t;
        while(!isSorted) {
            isSorted = true;
            for (int i = 0; i < array.length-1; i++) {
                if(array[i] > array [i+1]){
                    isSorted = false;

                    t = array[i];
                    array [i] = array [i+1];
                    array [i+1] = t;
                }
            }
        }
        System.out.println(Arrays.toString(array));
    }
}
________________________________________________________________________________________________________________________

